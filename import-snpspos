#!/usr/bin/env Rscript

suppressMessages({
  library(optparse)
  library(RSQLite)
})

option_list <-
    list(
        make_option("--input", help = "input data file [default: stdin]", default = "-"),
        make_option("--output", help = "output file [default: 'snpspos.sqlite']", default = "snpspos.sqlite")
        )

parser <- OptionParser(usage = "%prog [options]",
                       description = "snps positions data",
                       option_list = option_list)
opts <- parse_args(parser, positional_arguments = FALSE)

if(opts$input == "-") {
  input <- file("stdin")
} else {
  input <- file(opts$input, open = "r", raw = TRUE)
}

if(file.exists(opts$output)) {
  message("WARNING: removing already existing file ", shQuote(opts$output))
  stopifnot(file.remove(opts$output))
}

db <- dbConnect(dbDriver("SQLite"), opts$output)

##
## setup database schema
##
ignore <- dbGetQuery(db, "CREATE TABLE snpspos (
  SNPID TEXT,
  chromosome TEXT,
  position REAL
)")
ignore <- dbGetQuery(db, "CREATE INDEX SNPIndex on snpspos(SNPID);")

## read full input data
message("reading input data...")
contents <- read.table(input,
                       header = FALSE,
                       sep = "\t",
                       colClasses = c("character", "character", "numeric"),
                       col.names = c("SNPID", "chromosome", "position"))
message("done:")
sink(stderr())
str(contents)
sink()

status <- dbWriteTable(db, name = "snpspos", value = contents,
                       append = TRUE, row.names = FALSE)

if(!status) {
  stop("error writing data to the database")
}

status <- dbDisconnect(db)
if(!status) {
  stop("error disconnecting from database")
}

message("completed.")
